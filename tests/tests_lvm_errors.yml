---
- hosts: all
  become: true
  vars:
    mount_location1: '/opt/test1'
    mount_location2: '/opt/test2'
    volume_group_size: '10g'
    volume1_size: '5g'
    volume2_size: '2g'
    invalid_disks:
      - '/non/existent/disk'
    invalid_size: 'xyz GiB'
    unused_disk_subfact: '{{ ansible_devices[unused_disks[0]] }}'
    too_large_size: '{{ (unused_disk_subfact.sectors|int + 1) *
                        unused_disk_subfact.sectorsize|int }}'

  tasks:
    - include_role:
        name: storage

    - include_tasks: get_unused_disk.yml
      vars:
        min_size: "{{ volume_group_size }}"
        max_return: 1

    - name: Test for correct handling of invalid disk specifications.
      block:
        - name: Try to create LVM with an invalid disk specification.
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: foo
                disks: "{{ invalid_disks }}"
                volumes:
                  - name: test1
                    size: "{{ volume1_size }}"
                    mount_point: "{{ mount_location1 }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

    # the following does not work properly
    # - debug:
    #     msg: "{{ 'failed: ' + blivet_output.failed | string +
    #              'msg: ' + blivet_output.msg +
    #              'changed: ' + blivet_output.changed | string }}"

    # - name: Verify the output
    #   assert:
    #     that: "{{ blivet_output.failed and
    #               blivet_output.msg|regex_search('unable to resolve.+disk')|length>0 and
    #               not blivet_output.changed }}"
    #     msg: "Unexpected behavior w/ non-existent pool disk"

    - name: Test for correct handling of invalid size specification.
      block:
        - name: Try to create LVM with an invalid size specification.
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: foo
                disks: "{{ unused_disks }}"
                volumes:
                  - name: test1
                    size: "{{ invalid_size }}"
                    mount_point: "{{ mount_location1 }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

    # the following does not work properly
    # - name: Verify the output
    #   assert:
    #     that: "{{ blivet_output.failed and
    #               blivet_output.msg|regex_search('invalid size.+for volume') and
    #               not blivet_output.changed }}"
    #     msg: "Unexpected behavior w/ invalid volume size"

    - name: Test for correct handling of too-large volume size.
      block:
        - name: Try to create LVM with a too-large volume size.
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: foo
                disks: "{{ unused_disks }}"
                volumes:
                  - name: test1
                    size: "{{ too_large_size }}"
                    mount_point: "{{ mount_location1 }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

    # the following does not work properly
    # - name: Verify the output
    #   assert:
    #     that: "{{ blivet_output.failed and
    #               blivet_output.msg|regex_search('size.+exceeds.+space in pool') and
    #               not blivet_output.changed }}"
    #     msg: "Unexpected behavior w/ too-large volume size"

    - name: Test for correct handling of non-list disk specification.
      block:
        - name: Try to create LVM pool with disks specified as non-list.
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: foo
                disks: "{{ unused_disks[0] }}"
                volumes:
                  - name: test1
                    size: "{{ too_large_size }}"
                    mount_point: "{{ mount_location1 }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

    # the following does not work properly
    # - name: Verify the output
    #   assert:
    #     that: "{{ blivet_output.failed and
    #               blivet_output.msg|regex_search('disk.+list') and
    #               not blivet_output.changed }}"
    #     msg: "Unexpected behavior w/ disks not in list form"

    - name: Test for correct handling of missing disk specification.
      block:
        - name: Try to create LVM pool with no disks specified.
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: foo
                disks: []
                volumes:
                  - name: test1
                    size: "{{ too_large_size }}"
                    mount_point: "{{ mount_location1 }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

    # the following does not work properly
    # - name: Verify the output
    #   assert:
    #     that: "{{ blivet_output.failed and
    #               blivet_output.msg|regex_search('no disks.+pool') and
    #               not blivet_output.changed }}"
    #     msg: "Unexpected behavior w/ no disks specified"

    - name: Test for correct handling of LVM volume not defined within a pool.
      block:
        - name: Try to create LVM volume from outside of any pool.
          include_role:
            name: storage
          vars:
            storage_volumes:
              - name: test1
                type: lvm
                disks: []
                size: "{{ volume1_size }}"
                mount_point: "{{ mount_location1 }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

    # the following does not work properly
    # - name: Verify the output
    #   assert:
    #     that: "{{ blivet_output.failed and
    #               blivet_output.msg|regex_search('failed to find pool .+ for volume') and
    #               not blivet_output.changed }}"
    #     msg: "Unexpected behavior w/ LVM volume defined outside of any pool"

    - name: Test for correct handling of duplicate pool names
      block:
        - name: Try to create two pools w/ the same name
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: pool1
                type: lvm
                disks: "{{ unused_disks }}"
              - name: pool1
                type: lvm
                disks: "{{ unused_disks }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

        - name: Verify the output of the duplicate pools test
          assert:
            that: "blivet_output.failed and
                   'multiple pools with the same name' in blivet_output.msg and
                   not blivet_output.changed"
            msg: "Unexpected behavior w/ multiple pools sharing one name"

    - name: Test for correct handling of duplicate volume names within a pool
      block:
        - name: Try to create two volumes w/ the same name
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: pool1
                type: lvm
                disks: "{{ unused_disks }}"
                volumes:
                  - name: test1
                    type: lvm
                    size: "{{ volume1_size }}"
                    mount_point: "{{ mount_location1 }}"
                  - name: test1
                    type: lvm
                    size: "{{ volume2_size }}"
                    mount_point: "{{ mount_location2 }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

        - name: Verify the output of the duplicate volumes test
          assert:
            that: "blivet_output.failed and
                   blivet_output.msg|regex_search('multiple volumes in pool.*with the same name') and
                   not blivet_output.changed"
            msg: "Unexpected behavior w/ multiple volumes within a pool sharing a name"

    - name: Create a pool
      include_role:
        name: storage
      vars:
        storage_pools:
          - name: testpool1
            type: lvm
            disks: "{{ unused_disks }}"
            volumes:
              - name: testvol1
                fs_type: 'ext4'
                size: '1g'

    - name: Test for correct handling of safe_mode
      block:
        - name: Try to replace file system in safe mode
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: testpool1
                type: lvm
                disks: "{{ unused_disks }}"
                volumes:
                  - name: testvol1
                    fs_type: 'ext3'
                    size: '1g'

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

        - name: Verify the output
          assert:
            that: "{{ blivet_output.failed and
                      blivet_output.msg|regex_search('cannot remove existing formatting on volume.*in safe mode') and
                      not blivet_output.changed }}"
            msg: "Unexpected behavior w/ existing data on specified disks"

    - name: Test for correct handling of safe_mode with resize
      block:
        - name: Try to resize in safe mode
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: testpool1
                type: lvm
                disks: "{{ unused_disks }}"
                volumes:
                  - name: testvol1
                    fs_type: 'ext4'
                    size: '2g'

        - name: Verify the output
          assert:
            that: "{{ not blivet_output.failed and blivet_output.changed }}"
            msg: "Unexpected behavior w/ existing data on specified disks"

      when: false

    - name: Test for correct handling of safe_mode with existing pool
      block:
        - name: Try to create LVM pool on disks that already belong to an existing pool
          include_role:
            name: storage
          vars:
            storage_pools:
              - name: foo
                disks: "{{ unused_disks }}"
                type: lvm

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

        - name: Verify the output
          assert:
            that: "{{ blivet_output.failed and
                      blivet_output.msg|regex_search('cannot remove existing formatting and/or devices on disk.*in safe mode') and
                      not blivet_output.changed }}"
            msg: "Unexpected behavior w/ existing data on specified disks"

    - name: Test for correct handling of safe_mode
      block:
        - name: Try to replace a pool by a file system on disk in safe mode
          include_role:
            name: storage
          vars:
            storage_volumes:
              - name: test1
                type: disk
                fs_type: 'ext3'
                disks:
                  - "{{ unused_disks[0] }}"

        - name: UNREACH
          fail:
            msg: "this should be unreachable"

      rescue:
        - name: Check that we failed in the role
          assert:
            that:
              - ansible_failed_task.name != 'UNREACH'
            msg: "Role has not failed when it should have"
          vars:
            # Ugh! needed to expand ansible_failed_task
            storage_provider: blivet

    - name: Verify the output
      assert:
        that: "blivet_output.failed and
               blivet_output.msg|regex_search('cannot remove existing formatting on volume.*in safe mode') and
                  not blivet_output.changed"
        msg: "Unexpected behavior w/ existing data on specified disks"

    - name: Clean up
      include_role:
        name: storage
      vars:
        storage_safe_mode: false
        storage_pools:
          - name: testpool1
            type: lvm
            disks: "{{ unused_disks }}"
            state: absent
