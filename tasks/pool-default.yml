---

# TODO: Argument validation.
#
# TODO: Set defaults as needed: lvm_vg, device_name, disks
- set_fact:
    pool: "{{ pool_defaults|combine(pool_internal, raw_pool) }}"

- debug:
    var: pool

#
# Resolve specified disks to device node paths.
#
- name: Resolve disks
  resolve_blockdev:
    spec: "{{ item }}"
  with_items: "{{ pool.disks }}"
  register: resolved_disks

- debug:
    var: resolved_disks

- name: set list of resolved disk paths
  set_fact:
    pool: "{{ pool|combine({'disks': resolved_disks.results|map(attribute='device')|list}) }}"

#
# Validate and process the user-specified size
#
# There may or may not be a size specified for the pool. If
# there is not, we look to the policy for pool sizing.
- name: parse the specified size
  bsize:
    size: "{{ pool.size }}"
  register: pool_size
  when: pool.size is defined and pool.size

- name: see if pool already exists
  set_fact:
    pool: "{{ pool|combine({'_preexist': pool.name in ansible_facts.lvm.vgs}) }}"
  when: ansible_facts.lvm is defined and pool.type == "lvm"

- name: Add the finished pool to a list of pools
  set_fact:
    _storage_pools_list: "{{ _storage_pools_list + [pool] }}"

#
# XXX This is only going to remove fstab entries etc. for volumes explicitly listed.
#
- name: manage removal of pool volumes
  include_tasks: volume-{{ storage_backend }}.yml
  loop: "{{ pool.volumes }}"
  loop_control:
    loop_var: raw_volume
  when: pool.state == "absent"

- name: Manage the Specified Pool
  include_tasks: "{{ layer }}-{{ storage_backend }}.yml"
  loop: "{{ pool_layers if pool.state == 'present' else pool_layers[::-1] }}"
  loop_control:
    loop_var: layer

- name: manage pool volumes
  include_tasks: volume-{{ storage_backend }}.yml
  loop: "{{ pool.volumes }}"
  loop_control:
    loop_var: raw_volume
  when: pool.state == "present"

- debug:
    msg: "Done with pool {{ pool.name }}"

- set_fact:
    pool: null
    part_info: null

#
# Update facts since we may have changed system state.
#
# Should this be in a handler instead?
#
- name: Update facts
  setup:
  when: not ansible_check_mode
