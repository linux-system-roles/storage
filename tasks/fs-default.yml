---
- name: Stat the final device file
  include_tasks: stat_device.yml

- block:
  - name: Install xfsprogs for xfs file system type
    package:
      name: xfsprogs
      state: present
  - set_fact:
      xfsprogs_installed: true
  when: "volume.fs_type == 'xfs' and ['xfsprogs'] is not subset(ansible_facts.packages.keys()) \
         and xfsprogs_installed is undefined and not ansible_check_mode \
         and ((pool is defined and pool.state in 'present') or volume.state in 'present')"

- block:
  - name: Install e2fsprogs for ext file system type
    package:
      name: e2fsprogs
      state: present
  - set_fact:
      e2fsprogs_installed: true
  when: "volume.fs_type in ['ext2', 'ext3', 'ext4'] and \
         ['e2fsprogs'] is not subset(ansible_facts.packages.keys()) and \
         e2fsprogs_installed is undefined and not ansible_check_mode \
         and ((pool is defined and pool.state in 'present') or volume.state in 'present')"

- block:
  - name: Install util-linux as needed
    package:
      name: util-linux
      state: present
  - set_fact:
      util_linux_installed: true
  when: "(volume.fs_type == 'swap' or volume.state == 'absent' or
         (pool is defined and pool.state is defined and pool.state == 'absent'))
         and ['util-linux'] is not subset(ansible_facts.packages.keys()) and
         util_linux_installed is undefined and not ansible_check_mode"

- name: unmount fs if we're going to reformat
  mount:
    src: "{{ volume._device }}"
    path: "{{ volume._orig_mount_point }}"
    state: unmounted
  when: volume._wipe and volume._orig_mount_point
  changed_when: false

- name: Remove file system as needed
  command: wipefs {{ volume.fs_destroy_options }} {{ volume._device }}
  when: volume._wipe or volume._remove and device_status.stat.exists and not ansible_check_mode

- name: Create filesystem as needed
  filesystem:
    dev: "{{ volume._device }}"
    fstype: "{{ volume.fs_type }}"
    opts: "{{ volume.fs_create_options }}"
  when: volume.fs_type and volume._create and device_status.stat.exists
